import React, {useState} from 'react';
import LoginForm from './components/LoginForm';





function App() {
  const adminUser = {
    email: "admin@admin.com",
    password: "admin123"
  }

  const [user, setUser] = useState({name: "", email: ""});
  const [error, setError] = useState("");

  const Login = details => {
    console.log(details);

    if(details.email == adminUser.email && details.password == adminUser.password){
      console.log("Logged in");
      setUser({
        name: details.name,
        email: details.email
      });
    }else {
      console.log("Details do not match!");
      setError("Details do not match!");
    }
  }

  const Logout = () => {
    setUser({name: "", email: ""});
  }
  return (
    <div className="App">
    
      {(user.email != "") ? (
        <div className="welcome">
          <h2>Welcome, <span>{user.name}</span></h2>
          <button onClick={Logout}>Logout</button>
        </div>
      ) : (
        <LoginForm Login={Login} error={error}/>

      
      )  
     
       
      }
      
      
    </div>
  );
}

export default App;



import React, {useState} from 'react';

function LoginForm({Login, error}) {
    const [details, setDetails] = useState({name: "", email: "", password: ""});

    const submitHandler = e => {
        e.preventDefault();
        Login(details);
    }
    return (
       <form onSubmit={submitHandler}>
           <div className="form-inner">
               <h2>Login</h2>
               {(error != "") ? ( <div className="error">{error}</div> ) : ""}
               <div className="form-group">
                   <label htmlFor="name">Name:</label>
                   <input type="text" name="name" id="name" onChange={e => setDetails({...details, name: e.target.value})} value={details.name}/>
                </div>
                <div className="form-group">
                    <label htmlFor="email">Email: </label>
                    <input type="email" name="email" id="email" onChange={e => setDetails({...details, email: e.target.value})} value={details.email}/>
                </div>
                <div className="form-group">
                    <label htmlFor="password">Password: </label>
                    <input type="password" name="password" id="password" onChange={e => setDetails({...details, password: e.target.value})} value={details.password}/>
                </div>
                <input type="submit" value="LOGIN"/>
                <div  className="signup">
                    <p>New User?</p>
                    <a href="/components/SignupForm.js" >Create an account</a>
                    <input type="text"/>
                </div>
           </div>
       </form>
    )
}

export default LoginForm;



* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family:'Courier New', Courier, monospace;
}

input, button {
  appearance: none;
  background: none;
  border: none;
  outline: none;
}

.App {
  height: 100vh;
  display: flex;
  align-items: center;
  justify-content: center;
  background-color:palegoldenrod;
}

form {
  display: block;
  position: relative;
}

form:after {
  content: '';
  display: block;
  position: absolute;
  top: -5px;
  left: -5px;
  right: -5px;
  bottom: -5px;
  z-index: 1;
  background-image: linear-gradient(to bottom right, #FFCE00, #FE4880);
}

form .form-inner {
  position: relative;
  display: block;
  background-color: #FFF;
  padding: 30px;
  z-index: 2;
}

form .form-inner h2 {
  color: #888;
  font-size: 28px;
  font-weight: 500;
  margin-bottom: 30px;
}

form .form-inner .form-group {
  display: block;
  width: 300px;
  margin-bottom: 15px;
}

.form-inner .form-group label {
  display: block;
  color: #666;
  font-size: 12px;
  margin-bottom: 5px;
  transition: 0.4s;
}

.form-inner .form-group:focus-within label {
  color: #FE4880;
}

form .form-inner .form-group input {
  display: block;
  width: 100%;
  padding: 10px 15px;
  background-color:gainsboro;
  border-radius: 8px;
  transition: 0.4s;
}

form .form-inner .form-group input:focus {
  box-shadow: 0px 0px 3px gray;
}
  
form .form-inner input[type="submit"],
.welcome button{
  display: inline-block;
  padding: 10px 15px;
  border-radius: 8px;
  background-image: linear-gradient(to right, #FFCE00 50%, #FFCE00 50%, #FE4880);
  background-size: 200%;
  background-position: 0%;
  transition: 0.4s;
  color:#FFF;
  font-weight: 700;
  cursor: pointer;
}

form .form-inner input[type="submit"]:hover,
.welcome button:hover {
  background-position: 100% 0%;
}

.welcome {
  width: 100%;
  max-width: 480px;
  background-color: #FFF;
  padding: 15px 30px;
}

.welcome h2 {
  color: #888;
  font-size: 28px;
  font-weight: 500px;
  margin-bottom: 30px;
}

.welcome h2 span {
  color: #FE4880;
  font-weight: 700;
}

.signup p{
 
  display: block;
  color: #666;
  font-size: 12px;
  padding-top: 15px;
}

.signup a{
   color:#FE4880;
   font-size: 12px;
   transition: 0.4s;
   
}

